import streamlit as st
import pandas as pd
import os

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Excel
def load_excel(file):
    return pd.ExcelFile(file)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è Excel-—Ñ–∞–π–ª—É
def save_excel(df, sheet_name):
    with pd.ExcelWriter("edited_file.xlsx", engine="openpyxl") as writer:
        df.to_excel(writer, sheet_name=sheet_name, index=False)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ ID
def generate_unique_id(df, id_column):
    existing_ids = df[id_column].dropna().astype(str).tolist()
    new_id = 1
    while str(new_id) in existing_ids:
        new_id += 1
    return new_id

# –ü–æ—á–∞—Ç–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
st.title("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É Excel")
uploaded_file = st.file_uploader("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ Excel-—Ñ–∞–π–ª", type=["xls", "xlsx"])

if uploaded_file:
    xls = load_excel(uploaded_file)

    # –í–∏–±—ñ—Ä –ª–∏—Å—Ç–∞
    sheet_name = st.selectbox("üìë –û–±–µ—Ä—ñ—Ç—å –ª–∏—Å—Ç", xls.sheet_names, key="selected_sheet")

    if sheet_name:
        if "df" not in st.session_state or st.session_state["last_sheet"] != sheet_name:
            st.session_state["df"] = pd.read_excel(xls, sheet_name=sheet_name)
            st.session_state["last_sheet"] = sheet_name
            st.session_state["selected_index"] = None  # –û—á–∏—Å—Ç–∫–∞ –≤–∏–±–æ—Ä—É

        df = st.session_state["df"]

        if not df.empty:
            st.subheader("üîç –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ —Ç–∞–±–ª–∏—Ü—ñ")
            st.dataframe(df)  # **–¢–µ–ø–µ—Ä —Ü—è —Ç–∞–±–ª–∏—Ü—è –±—É–¥–µ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏—Å—è –ø—ñ—Å–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è**

            # –í–∏–±—ñ—Ä –ø–µ—Ä—à–∏—Ö —Ç—Ä—å–æ—Ö –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –ø–æ—à—É–∫—É
            if len(df.columns) >= 3:
                col1, col2, col3 = df.columns[:3]

                search1 = st.text_input(f"üîé {col1}")
                search2 = st.text_input(f"üîé {col2}")
                search3 = st.text_input(f"üîé {col3}")

                if st.button("üîç –ü–æ—à—É–∫ –∑–∞–ø–∏—Å—ñ–≤"):
                    found_rows = df[
                        (df[col1].astype(str).str.contains(search1, na=False, case=False)) &
                        (df[col2].astype(str).str.contains(search2, na=False, case=False)) &
                        (df[col3].astype(str).str.contains(search3, na=False, case=False))
                    ]

                    if not found_rows.empty:
                        st.write("‚úÖ –ó–Ω–∞–π–¥–µ–Ω—ñ –∑–∞–ø–∏—Å–∏:")
                        st.dataframe(found_rows)

                        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –¥–ª—è –≤–∏–±–æ—Ä—É
                        index_options = found_rows.index.tolist()
                        index_labels = [
                            f"{df.at[idx, col1]} | {df.at[idx, col2]} | {df.at[idx, col3]}" 
                            for idx in index_options
                        ]

                        selected_label = st.selectbox("‚úèÔ∏è –û–±–µ—Ä—ñ—Ç—å –∑–∞–ø–∏—Å –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è", index_labels)
                        selected_index = index_options[index_labels.index(selected_label)]
                        st.session_state["selected_index"] = selected_index

                    else:
                        st.warning("‚ö†Ô∏è –ñ–æ–¥–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

            # –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–Ω–∞–π–¥–µ–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É
            if st.session_state.get("selected_index") is not None:
                selected_index = st.session_state["selected_index"]
                edited_values = {}

                for col in df.columns:
                    edited_values[col] = st.text_input(f"{col}", str(df.at[selected_index, col]))

                if st.button("üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏"):
                    for col in df.columns:
                        df.at[selected_index, col] = edited_values[col]

                    save_excel(df, sheet_name)
                    st.session_state["df"] = df  # **–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö**
                    st.success("‚úÖ –ó–º—ñ–Ω–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ!")

                    st.experimental_rerun()  # **–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ**

            # –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É
            st.subheader("‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å")
            new_values = {}

            # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ ID, —è–∫—â–æ –∫–æ–ª–æ–Ω–∫–∞ ID —î
            id_column = None
            for col in [col1, col2, col3]:
                if "ID" in col.upper():
                    id_column = col
                    break

            for col in df.columns:
                if col == id_column:
                    new_values[col] = generate_unique_id(df, id_column)
                    st.text_input(f"{col} (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ)", str(new_values[col]), disabled=True)
                else:
                    new_values[col] = st.text_input(f"{col} (–Ω–æ–≤–∏–π –∑–∞–ø–∏—Å)", "")

            if st.button("‚úÖ –î–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å"):
                new_row = pd.DataFrame([new_values])
                df = pd.concat([df, new_row], ignore_index=True)

                save_excel(df, sheet_name)
                st.session_state["df"] = df  # **–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É**
                sst.success(f"‚úÖ –ù–æ–≤–∏–π –∑–∞–ø–∏—Å –¥–æ–¥–∞–Ω–æ! (ID: {new_values.get('ID', '–ù–µ–º–∞—î ID')})")


                st.rerun()  # **–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –≤ –Ω–æ–≤–∏—Ö –≤–µ—Ä—Å—ñ—è—Ö Streamlit**
                
            # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏
            if st.button("‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É"):
                if st.confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É?"):
                    if st.confirm("–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏ –ø–µ—Ä–µ–¥ –≤–∏—Ö–æ–¥–æ–º?"):
                        save_excel(df, sheet_name)
                        st.success("‚úÖ –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ! –ü—Ä–æ–≥—Ä–∞–º—É –±—É–¥–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
                    else:
                        st.warning("‚ö†Ô∏è –í–∏—Ö—ñ–¥ –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è!")

                    st.warning("üö™ –ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–≤–µ—Ä—à—É—î —Ä–æ–±–æ—Ç—É...")

                    st.session_state.clear()  # –û—á–∏—â–µ–Ω–Ω—è —Å–µ—Å—ñ—ó –ø–µ—Ä–µ–¥ –≤–∏—Ö–æ–¥–æ–º
                    os._exit(0)  # üî¥ –ü—Ä–∏–º—É—Å–æ–≤–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–∏
            
            
            
          #  if st.button("‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É"):
          #      save_changes = st.radio("üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏ –ø–µ—Ä–µ–¥ –≤–∏—Ö–æ–¥–æ–º?", ["–¢–∞–∫", "–ù—ñ"])
          #
          #      if save_changes == "–¢–∞–∫":
          #          save_excel(df, sheet_name)
          #          st.success("‚úÖ –ó–º—ñ–Ω–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ! –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –≤–∏—Ö–æ–¥–æ–º:")
          #          st.download_button(
          #              label="‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Ñ–∞–π–ª",
          #              data=open("edited_file.xlsx", "rb").read(),
          #              file_name="edited_file.xlsx",
          #              mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
          #          )
          #
          #      st.warning("üö™ –í–∏ –≤–∏–π—à–ª–∏ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏.")
          #      
          #      # **–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é**
          #      st.stop()

else:
    st.info("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ Excel-—Ñ–∞–π–ª –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏")